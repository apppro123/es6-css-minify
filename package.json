{
    "name": "es6-css-minify",
    "displayName": "JS & CSS Minifier",
    "description": "Easily Minify ES5/ES6/ES7/ES8 and CSS. Supports minify on save, minify selection & custom configurations!",
    "version": "3.1.0",
    "publisher": "olback",
    "icon": "icon.png",
    "galleryBanner": {
        "color": "#333",
        "theme": "dark"
    },
    "license": "SEE LICENSE IN LICENSE.md",
    "homepage": "https://github.com/olback/es6-css-minify",
    "bugs": "https://github.com/olback/es6-css-minify/issues",
    "qna": "https://github.com/olback/es6-css-minify/issues",
    "repository": {
        "type": "git",
        "url": "https://github.com/olback/es6-css-minify.git"
    },
    "author": {
        "name": "olback",
        "email": "es6-css-minify@olback.net"
    },
    "keywords": [
        "ECMA Script",
        "CSS",
        "js",
        "javascript",
        "minify"
    ],
    "categories": [
        "Other"
    ],
    "engines": {
        "vscode": "^1.18.0"
    },
    "activationEvents": [
        "onCommand:es6-css-minify.loadConfig",
        "onCommand:es6-css-minify.minify",
        "onCommand:es6-css-minify.minifySelection",
        "onLanguage:css",
        "onLanguage:javascript",
        "onLanguage:json",
        "workspaceContains:**/*.css",
        "workspaceContains:**/*.js",
        "workspaceContains:**/*.json"
    ],
    "main": "./dist/extension",
    "contributes": {
        "commands": [
            {
                "command": "es6-css-minify.loadConfig",
                "title": "Minify: Reload config"
            },
            {
                "command": "es6-css-minify.minify",
                "title": "Minify: Document"
            },
            {
                "command": "es6-css-minify.minifySelection",
                "title": "Minify: Selection"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "JS & CSS Minifier",
            "properties": {
                "es6-css-minify.minifyOnSave": {
                    "type": "string",
                    "description": "Automatically minify file when saving. Set to \"yes\" to always minify, \"no\" to never minify, \"exists\" to only minify if a minified version already exists.",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no",
                        "exists"
                    ]
                },
                "es6-css-minify.hideButton": {
                    "type": "string",
                    "description": "Hide the minify button in the status bar.\n\"yes\": Always hidden\n\"no\": Always visible. Even when minification is not supported.\n\"auto\": Hide the button when minification is not available. This is not 100% reliable.",
                    "default": "no",
                    "enum": [
                        "always",
                        "never",
                        "auto"
                    ]
                },
                "es6-css-minify.showLogOnWarning": {
                    "type": "boolean",
                    "description": "Show log if minification is successful but has warnings.",
                    "default": true
                },
                "es6-css-minify.showLogOnError": {
                    "type": "boolean",
                    "description": "When minification fails, show log with warnings and errors.",
                    "default": true
                },
                "es6-css-minify.onSaveDelay": {
                    "type": "number",
                    "description": "The amount of milliseconds to wait before minifying after a save. This might be needed on slower systems. Setting this to 0 disables the timeout. You should never have to set this to over 50.",
                    "default": 0
                },
                "es6-css-minify.uglifyConfigFile": {
                    "type": "string",
                    "description": "If this file exists, overwrite uglify-es settings with the ones specified in this file. For more info visit https://www.npmjs.com/package/uglify-es#minify-options-structure.",
                    "default": ".uglifyrc"
                },
                "es6-css-minify.genJSmap": {
                    "type": "boolean",
                    "description": "Generate JavaScript sourcemap files.",
                    "default": false
                },
                "es6-css-minify.jsMapSource": {
                    "type": "string",
                    "description": "Prefix for sources in map files.",
                    "default": ""
                },
                "es6-css-minify.jsMinPath": {
                    "type": "string",
                    "description": "Where to save the minified file.\nDefault: '' - saves in the same directory.\n'/' - Save in workspace root.",
                    "default": ""
                },
                "es6-css-minify.jsPostfix": {
                    "type": "string",
                    "description": "Filename postfix",
                    "default": "min"
                },
                "es6-css-minify.js": {
                    "type": "object",
                    "description": "Uglify-es settings. For more info visit https://www.npmjs.com/package/uglify-es#parse-options.",
                    "default": {
                        "mangle": false,
                        "compress": {
                            "unused": false
                        },
                        "output": {
                            "quote_style": 0
                        }
                    }
                },
                "es6-css-minify.cleancssConfigFile": {
                    "type": "string",
                    "description": "If this file exists, overwrite clean-css settings with the ones specified in this file. For more info visit https://www.npmjs.com/package/clean-css.",
                    "default": ".cleancssrc"
                },
                "es6-css-minify.genCSSmap": {
                    "type": "boolean",
                    "description": "Generate CSS sourcemap files.",
                    "default": false
                },
                "es6-css-minify.cssMapSource": {
                    "type": "string",
                    "description": "Prefix for sources in map files.",
                    "default": ""
                },
                "es6-css-minify.cssMinPath": {
                    "type": "string",
                    "description": "Where to save the minified file.\nDefault: '' - saves in the same directory.\n'/' - Save in workspace root.",
                    "default": ""
                },
                "es6-css-minify.cssPostfix": {
                    "type": "string",
                    "description": "Filename postfix",
                    "default": "min"
                },
                "es6-css-minify.css": {
                    "type": "object",
                    "description": "Clean-CSS settings. For more info visit https://www.npmjs.com/package/clean-css.",
                    "default": {
                        "rebase": false
                    }
                },
                "es6-css-minify.enableAutoprefixer": {
                    "type": "boolean",
                    "description": "Enable autoprefixer?",
                    "default": false
                },
                "es6-css-minify.enableAutoprefixerSelection": {
                    "type": "boolean",
                    "description": "Enable autoprefixer for selection minification?",
                    "default": false
                },
                "es6-css-minify.autoprefixer": {
                    "type": "object",
                    "description": "Autoprefixer options object. For more info visit https://github.com/postcss/autoprefixer#options",
                    "default": {}
                },
                "es6-css-minify.autoprefixerConfigFile": {
                    "type": "string",
                    "description": "",
                    "default": ".autoprefixerrc"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm test && npm run compile",
        "compile": "node --max-old-space-size=1024 node_modules/webpack/bin/webpack --mode production",
        "watch": "node node_modules/webpack/bin/webpack --mode development --watch",
        "pretest": "npm run compile && npm run ts:compile",
        "ts:compile": "tsc -p ./",
        "test": "node --max-old-space-size=1024 ./out/test/runTest.js",
        "lint": "tslint -p ./"
    },
    "devDependencies": {
        "@types/autoprefixer": "^9.5.0",
        "@types/clean-css": "^4.2.1",
        "@types/glob": "^7.1.1",
        "@types/mocha": "^5.2.6",
        "@types/node": "^10.12.21",
        "@types/vscode": "^1.18.0",
        "@types/webpack": "^4.32.1",
        "autoprefixer": "^9.6.1",
        "clean-css": "^4.2.1",
        "cross-env": "^5.2.0",
        "fork-ts-checker-webpack-plugin": "^1.5.0",
        "glob": "^7.1.4",
        "mocha": "^6.1.4",
        "terser": "^4.1.3",
        "ts-loader": "^6.0.4",
        "tslint": "^5.12.1",
        "typescript": "^3.3.1",
        "vscode-test": "^1.1.0",
        "webpack": "^4.39.1",
        "webpack-cli": "^3.3.6"
    },
    "dependencies": {}
}
